[[package]]
name = "alabaster"
version = "0.7.12"
description = "A configurable sidebar-enabled Sphinx theme"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "appdirs"
version = "1.4.4"
description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "aspy.refactor-imports"
version = "2.2.0"
description = "Utilities for refactoring imports in python-like syntax."
category = "dev"
optional = false
python-versions = ">=3.6.1"

[package.dependencies]
cached-property = "*"

[[package]]
name = "atomicwrites"
version = "1.4.0"
description = "Atomic file writes."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "attrs"
version = "21.2.0"
description = "Classes Without Boilerplate"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
dev = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins", "zope.interface", "furo", "sphinx", "sphinx-notfound-page", "pre-commit"]
docs = ["furo", "sphinx", "zope.interface", "sphinx-notfound-page"]
tests = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins", "zope.interface"]
tests_no_zope = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins"]

[[package]]
name = "babel"
version = "2.9.1"
description = "Internationalization utilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
pytz = ">=2015.7"

[[package]]
name = "backports.entry-points-selectable"
version = "1.1.0"
description = "Compatibility shim providing selectable entry points for older implementations"
category = "dev"
optional = false
python-versions = ">=2.7"

[package.dependencies]
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=4.6)", "pytest-flake8", "pytest-cov", "pytest-black (>=0.3.7)", "pytest-mypy", "pytest-checkdocs (>=2.4)", "pytest-enabler (>=1.0.1)"]

[[package]]
name = "bandit"
version = "1.7.0"
description = "Security oriented static analyser for python code."
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
colorama = {version = ">=0.3.9", markers = "platform_system == \"Windows\""}
GitPython = ">=1.0.1"
PyYAML = ">=5.3.1"
six = ">=1.10.0"
stevedore = ">=1.20.0"

[[package]]
name = "black"
version = "20.8b1"
description = "The uncompromising code formatter."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
appdirs = "*"
click = ">=7.1.2"
mypy-extensions = ">=0.4.3"
pathspec = ">=0.6,<1"
regex = ">=2020.1.8"
toml = ">=0.10.1"
typed-ast = ">=1.4.0"
typing-extensions = ">=3.7.4"

[package.extras]
colorama = ["colorama (>=0.4.3)"]
d = ["aiohttp (>=3.3.2)", "aiohttp-cors"]

[[package]]
name = "boto3"
version = "1.18.8"
description = "The AWS SDK for Python"
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
botocore = ">=1.21.8,<1.22.0"
jmespath = ">=0.7.1,<1.0.0"
s3transfer = ">=0.5.0,<0.6.0"

[[package]]
name = "boto3-stubs"
version = "1.18.8"
description = "Type annotations for boto3 1.18.8, generated by mypy-boto3-builder 5.1.0"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
botocore-stubs = "*"
mypy-boto3-s3 = {version = ">=1.18.3", optional = true, markers = "extra == \"s3\""}
typing-extensions = {version = "*", markers = "python_version < \"3.8\""}

[package.extras]
accessanalyzer = ["mypy-boto3-accessanalyzer (>=1.18.3)"]
acm = ["mypy-boto3-acm (>=1.18.3)"]
acm-pca = ["mypy-boto3-acm-pca (>=1.18.3)"]
alexaforbusiness = ["mypy-boto3-alexaforbusiness (>=1.18.3)"]
all = ["mypy-boto3-accessanalyzer (>=1.18.3)", "mypy-boto3-acm (>=1.18.3)", "mypy-boto3-acm-pca (>=1.18.3)", "mypy-boto3-alexaforbusiness (>=1.18.3)", "mypy-boto3-amp (>=1.18.3)", "mypy-boto3-amplify (>=1.18.3)", "mypy-boto3-amplifybackend (>=1.18.3)", "mypy-boto3-apigateway (>=1.18.3)", "mypy-boto3-apigatewaymanagementapi (>=1.18.3)", "mypy-boto3-apigatewayv2 (>=1.18.3)", "mypy-boto3-appconfig (>=1.18.3)", "mypy-boto3-appflow (>=1.18.3)", "mypy-boto3-appintegrations (>=1.18.3)", "mypy-boto3-application-autoscaling (>=1.18.3)", "mypy-boto3-application-insights (>=1.18.3)", "mypy-boto3-applicationcostprofiler (>=1.18.3)", "mypy-boto3-appmesh (>=1.18.3)", "mypy-boto3-apprunner (>=1.18.3)", "mypy-boto3-appstream (>=1.18.3)", "mypy-boto3-appsync (>=1.18.3)", "mypy-boto3-athena (>=1.18.3)", "mypy-boto3-auditmanager (>=1.18.3)", "mypy-boto3-autoscaling (>=1.18.3)", "mypy-boto3-autoscaling-plans (>=1.18.3)", "mypy-boto3-backup (>=1.18.3)", "mypy-boto3-batch (>=1.18.3)", "mypy-boto3-braket (>=1.18.3)", "mypy-boto3-budgets (>=1.18.3)", "mypy-boto3-ce (>=1.18.3)", "mypy-boto3-chime (>=1.18.3)", "mypy-boto3-cloud9 (>=1.18.3)", "mypy-boto3-clouddirectory (>=1.18.3)", "mypy-boto3-cloudformation (>=1.18.3)", "mypy-boto3-cloudfront (>=1.18.3)", "mypy-boto3-cloudhsm (>=1.18.3)", "mypy-boto3-cloudhsmv2 (>=1.18.3)", "mypy-boto3-cloudsearch (>=1.18.3)", "mypy-boto3-cloudsearchdomain (>=1.18.3)", "mypy-boto3-cloudtrail (>=1.18.3)", "mypy-boto3-cloudwatch (>=1.18.3)", "mypy-boto3-codeartifact (>=1.18.3)", "mypy-boto3-codebuild (>=1.18.3)", "mypy-boto3-codecommit (>=1.18.3)", "mypy-boto3-codedeploy (>=1.18.3)", "mypy-boto3-codeguru-reviewer (>=1.18.3)", "mypy-boto3-codeguruprofiler (>=1.18.3)", "mypy-boto3-codepipeline (>=1.18.3)", "mypy-boto3-codestar (>=1.18.3)", "mypy-boto3-codestar-connections (>=1.18.3)", "mypy-boto3-codestar-notifications (>=1.18.3)", "mypy-boto3-cognito-identity (>=1.18.3)", "mypy-boto3-cognito-idp (>=1.18.3)", "mypy-boto3-cognito-sync (>=1.18.3)", "mypy-boto3-comprehend (>=1.18.3)", "mypy-boto3-comprehendmedical (>=1.18.3)", "mypy-boto3-compute-optimizer (>=1.18.3)", "mypy-boto3-config (>=1.18.3)", "mypy-boto3-connect (>=1.18.3)", "mypy-boto3-connect-contact-lens (>=1.18.3)", "mypy-boto3-connectparticipant (>=1.18.3)", "mypy-boto3-cur (>=1.18.3)", "mypy-boto3-customer-profiles (>=1.18.3)", "mypy-boto3-databrew (>=1.18.3)", "mypy-boto3-dataexchange (>=1.18.3)", "mypy-boto3-datapipeline (>=1.18.3)", "mypy-boto3-datasync (>=1.18.3)", "mypy-boto3-dax (>=1.18.3)", "mypy-boto3-detective (>=1.18.3)", "mypy-boto3-devicefarm (>=1.18.3)", "mypy-boto3-devops-guru (>=1.18.3)", "mypy-boto3-directconnect (>=1.18.3)", "mypy-boto3-discovery (>=1.18.3)", "mypy-boto3-dlm (>=1.18.3)", "mypy-boto3-dms (>=1.18.3)", "mypy-boto3-docdb (>=1.18.3)", "mypy-boto3-ds (>=1.18.3)", "mypy-boto3-dynamodb (>=1.18.3)", "mypy-boto3-dynamodbstreams (>=1.18.3)", "mypy-boto3-ebs (>=1.18.3)", "mypy-boto3-ec2 (>=1.18.3)", "mypy-boto3-ec2-instance-connect (>=1.18.3)", "mypy-boto3-ecr (>=1.18.3)", "mypy-boto3-ecr-public (>=1.18.3)", "mypy-boto3-ecs (>=1.18.3)", "mypy-boto3-efs (>=1.18.3)", "mypy-boto3-eks (>=1.18.3)", "mypy-boto3-elastic-inference (>=1.18.3)", "mypy-boto3-elasticache (>=1.18.3)", "mypy-boto3-elasticbeanstalk (>=1.18.3)", "mypy-boto3-elastictranscoder (>=1.18.3)", "mypy-boto3-elb (>=1.18.3)", "mypy-boto3-elbv2 (>=1.18.3)", "mypy-boto3-emr (>=1.18.3)", "mypy-boto3-emr-containers (>=1.18.3)", "mypy-boto3-es (>=1.18.3)", "mypy-boto3-events (>=1.18.3)", "mypy-boto3-finspace (>=1.18.3)", "mypy-boto3-finspace-data (>=1.18.3)", "mypy-boto3-firehose (>=1.18.3)", "mypy-boto3-fis (>=1.18.3)", "mypy-boto3-fms (>=1.18.3)", "mypy-boto3-forecast (>=1.18.3)", "mypy-boto3-forecastquery (>=1.18.3)", "mypy-boto3-frauddetector (>=1.18.3)", "mypy-boto3-fsx (>=1.18.3)", "mypy-boto3-gamelift (>=1.18.3)", "mypy-boto3-glacier (>=1.18.3)", "mypy-boto3-globalaccelerator (>=1.18.3)", "mypy-boto3-glue (>=1.18.3)", "mypy-boto3-greengrass (>=1.18.3)", "mypy-boto3-greengrassv2 (>=1.18.3)", "mypy-boto3-groundstation (>=1.18.3)", "mypy-boto3-guardduty (>=1.18.3)", "mypy-boto3-health (>=1.18.3)", "mypy-boto3-healthlake (>=1.18.3)", "mypy-boto3-honeycode (>=1.18.3)", "mypy-boto3-iam (>=1.18.3)", "mypy-boto3-identitystore (>=1.18.3)", "mypy-boto3-imagebuilder (>=1.18.3)", "mypy-boto3-importexport (>=1.18.3)", "mypy-boto3-inspector (>=1.18.3)", "mypy-boto3-iot (>=1.18.3)", "mypy-boto3-iot-data (>=1.18.3)", "mypy-boto3-iot-jobs-data (>=1.18.3)", "mypy-boto3-iot1click-devices (>=1.18.3)", "mypy-boto3-iot1click-projects (>=1.18.3)", "mypy-boto3-iotanalytics (>=1.18.3)", "mypy-boto3-iotdeviceadvisor (>=1.18.3)", "mypy-boto3-iotevents (>=1.18.3)", "mypy-boto3-iotevents-data (>=1.18.3)", "mypy-boto3-iotfleethub (>=1.18.3)", "mypy-boto3-iotsecuretunneling (>=1.18.3)", "mypy-boto3-iotsitewise (>=1.18.3)", "mypy-boto3-iotthingsgraph (>=1.18.3)", "mypy-boto3-iotwireless (>=1.18.3)", "mypy-boto3-ivs (>=1.18.3)", "mypy-boto3-kafka (>=1.18.3)", "mypy-boto3-kendra (>=1.18.3)", "mypy-boto3-kinesis (>=1.18.3)", "mypy-boto3-kinesis-video-archived-media (>=1.18.3)", "mypy-boto3-kinesis-video-media (>=1.18.3)", "mypy-boto3-kinesis-video-signaling (>=1.18.3)", "mypy-boto3-kinesisanalytics (>=1.18.3)", "mypy-boto3-kinesisanalyticsv2 (>=1.18.3)", "mypy-boto3-kinesisvideo (>=1.18.3)", "mypy-boto3-kms (>=1.18.3)", "mypy-boto3-lakeformation (>=1.18.3)", "mypy-boto3-lambda (>=1.18.3)", "mypy-boto3-lex-models (>=1.18.3)", "mypy-boto3-lex-runtime (>=1.18.3)", "mypy-boto3-lexv2-models (>=1.18.3)", "mypy-boto3-lexv2-runtime (>=1.18.3)", "mypy-boto3-license-manager (>=1.18.3)", "mypy-boto3-lightsail (>=1.18.3)", "mypy-boto3-location (>=1.18.3)", "mypy-boto3-logs (>=1.18.3)", "mypy-boto3-lookoutequipment (>=1.18.3)", "mypy-boto3-lookoutmetrics (>=1.18.3)", "mypy-boto3-lookoutvision (>=1.18.3)", "mypy-boto3-machinelearning (>=1.18.3)", "mypy-boto3-macie (>=1.18.3)", "mypy-boto3-macie2 (>=1.18.3)", "mypy-boto3-managedblockchain (>=1.18.3)", "mypy-boto3-marketplace-catalog (>=1.18.3)", "mypy-boto3-marketplace-entitlement (>=1.18.3)", "mypy-boto3-marketplacecommerceanalytics (>=1.18.3)", "mypy-boto3-mediaconnect (>=1.18.3)", "mypy-boto3-mediaconvert (>=1.18.3)", "mypy-boto3-medialive (>=1.18.3)", "mypy-boto3-mediapackage (>=1.18.3)", "mypy-boto3-mediapackage-vod (>=1.18.3)", "mypy-boto3-mediastore (>=1.18.3)", "mypy-boto3-mediastore-data (>=1.18.3)", "mypy-boto3-mediatailor (>=1.18.3)", "mypy-boto3-meteringmarketplace (>=1.18.3)", "mypy-boto3-mgh (>=1.18.3)", "mypy-boto3-mgn (>=1.18.3)", "mypy-boto3-migrationhub-config (>=1.18.3)", "mypy-boto3-mobile (>=1.18.3)", "mypy-boto3-mq (>=1.18.3)", "mypy-boto3-mturk (>=1.18.3)", "mypy-boto3-mwaa (>=1.18.3)", "mypy-boto3-neptune (>=1.18.3)", "mypy-boto3-network-firewall (>=1.18.3)", "mypy-boto3-networkmanager (>=1.18.3)", "mypy-boto3-nimble (>=1.18.3)", "mypy-boto3-opsworks (>=1.18.3)", "mypy-boto3-opsworkscm (>=1.18.3)", "mypy-boto3-organizations (>=1.18.3)", "mypy-boto3-outposts (>=1.18.3)", "mypy-boto3-personalize (>=1.18.3)", "mypy-boto3-personalize-events (>=1.18.3)", "mypy-boto3-personalize-runtime (>=1.18.3)", "mypy-boto3-pi (>=1.18.3)", "mypy-boto3-pinpoint (>=1.18.3)", "mypy-boto3-pinpoint-email (>=1.18.3)", "mypy-boto3-pinpoint-sms-voice (>=1.18.3)", "mypy-boto3-polly (>=1.18.3)", "mypy-boto3-pricing (>=1.18.3)", "mypy-boto3-proton (>=1.18.3)", "mypy-boto3-qldb (>=1.18.3)", "mypy-boto3-qldb-session (>=1.18.3)", "mypy-boto3-quicksight (>=1.18.3)", "mypy-boto3-ram (>=1.18.3)", "mypy-boto3-rds (>=1.18.3)", "mypy-boto3-rds-data (>=1.18.3)", "mypy-boto3-redshift (>=1.18.3)", "mypy-boto3-redshift-data (>=1.18.3)", "mypy-boto3-rekognition (>=1.18.3)", "mypy-boto3-resource-groups (>=1.18.3)", "mypy-boto3-resourcegroupstaggingapi (>=1.18.3)", "mypy-boto3-robomaker (>=1.18.3)", "mypy-boto3-route53 (>=1.18.3)", "mypy-boto3-route53-recovery-cluster (>=1.18.3)", "mypy-boto3-route53-recovery-control-config (>=1.18.3)", "mypy-boto3-route53-recovery-readiness (>=1.18.3)", "mypy-boto3-route53domains (>=1.18.3)", "mypy-boto3-route53resolver (>=1.18.3)", "mypy-boto3-s3 (>=1.18.3)", "mypy-boto3-s3control (>=1.18.3)", "mypy-boto3-s3outposts (>=1.18.3)", "mypy-boto3-sagemaker (>=1.18.3)", "mypy-boto3-sagemaker-a2i-runtime (>=1.18.3)", "mypy-boto3-sagemaker-edge (>=1.18.3)", "mypy-boto3-sagemaker-featurestore-runtime (>=1.18.3)", "mypy-boto3-sagemaker-runtime (>=1.18.3)", "mypy-boto3-savingsplans (>=1.18.3)", "mypy-boto3-schemas (>=1.18.3)", "mypy-boto3-sdb (>=1.18.3)", "mypy-boto3-secretsmanager (>=1.18.3)", "mypy-boto3-securityhub (>=1.18.3)", "mypy-boto3-serverlessrepo (>=1.18.3)", "mypy-boto3-service-quotas (>=1.18.3)", "mypy-boto3-servicecatalog (>=1.18.3)", "mypy-boto3-servicecatalog-appregistry (>=1.18.3)", "mypy-boto3-servicediscovery (>=1.18.3)", "mypy-boto3-ses (>=1.18.3)", "mypy-boto3-sesv2 (>=1.18.3)", "mypy-boto3-shield (>=1.18.3)", "mypy-boto3-signer (>=1.18.3)", "mypy-boto3-sms (>=1.18.3)", "mypy-boto3-sms-voice (>=1.18.3)", "mypy-boto3-snowball (>=1.18.3)", "mypy-boto3-sns (>=1.18.3)", "mypy-boto3-sqs (>=1.18.3)", "mypy-boto3-ssm (>=1.18.3)", "mypy-boto3-ssm-contacts (>=1.18.3)", "mypy-boto3-ssm-incidents (>=1.18.3)", "mypy-boto3-sso (>=1.18.3)", "mypy-boto3-sso-admin (>=1.18.3)", "mypy-boto3-sso-oidc (>=1.18.3)", "mypy-boto3-stepfunctions (>=1.18.3)", "mypy-boto3-storagegateway (>=1.18.3)", "mypy-boto3-sts (>=1.18.3)", "mypy-boto3-support (>=1.18.3)", "mypy-boto3-swf (>=1.18.3)", "mypy-boto3-synthetics (>=1.18.3)", "mypy-boto3-textract (>=1.18.3)", "mypy-boto3-timestream-query (>=1.18.3)", "mypy-boto3-timestream-write (>=1.18.3)", "mypy-boto3-transcribe (>=1.18.3)", "mypy-boto3-transfer (>=1.18.3)", "mypy-boto3-translate (>=1.18.3)", "mypy-boto3-waf (>=1.18.3)", "mypy-boto3-waf-regional (>=1.18.3)", "mypy-boto3-wafv2 (>=1.18.3)", "mypy-boto3-wellarchitected (>=1.18.3)", "mypy-boto3-workdocs (>=1.18.3)", "mypy-boto3-worklink (>=1.18.3)", "mypy-boto3-workmail (>=1.18.3)", "mypy-boto3-workmailmessageflow (>=1.18.3)", "mypy-boto3-workspaces (>=1.18.3)", "mypy-boto3-xray (>=1.18.3)"]
amp = ["mypy-boto3-amp (>=1.18.3)"]
amplify = ["mypy-boto3-amplify (>=1.18.3)"]
amplifybackend = ["mypy-boto3-amplifybackend (>=1.18.3)"]
apigateway = ["mypy-boto3-apigateway (>=1.18.3)"]
apigatewaymanagementapi = ["mypy-boto3-apigatewaymanagementapi (>=1.18.3)"]
apigatewayv2 = ["mypy-boto3-apigatewayv2 (>=1.18.3)"]
appconfig = ["mypy-boto3-appconfig (>=1.18.3)"]
appflow = ["mypy-boto3-appflow (>=1.18.3)"]
appintegrations = ["mypy-boto3-appintegrations (>=1.18.3)"]
application-autoscaling = ["mypy-boto3-application-autoscaling (>=1.18.3)"]
application-insights = ["mypy-boto3-application-insights (>=1.18.3)"]
applicationcostprofiler = ["mypy-boto3-applicationcostprofiler (>=1.18.3)"]
appmesh = ["mypy-boto3-appmesh (>=1.18.3)"]
apprunner = ["mypy-boto3-apprunner (>=1.18.3)"]
appstream = ["mypy-boto3-appstream (>=1.18.3)"]
appsync = ["mypy-boto3-appsync (>=1.18.3)"]
athena = ["mypy-boto3-athena (>=1.18.3)"]
auditmanager = ["mypy-boto3-auditmanager (>=1.18.3)"]
autoscaling = ["mypy-boto3-autoscaling (>=1.18.3)"]
autoscaling-plans = ["mypy-boto3-autoscaling-plans (>=1.18.3)"]
backup = ["mypy-boto3-backup (>=1.18.3)"]
batch = ["mypy-boto3-batch (>=1.18.3)"]
braket = ["mypy-boto3-braket (>=1.18.3)"]
budgets = ["mypy-boto3-budgets (>=1.18.3)"]
ce = ["mypy-boto3-ce (>=1.18.3)"]
chime = ["mypy-boto3-chime (>=1.18.3)"]
cloud9 = ["mypy-boto3-cloud9 (>=1.18.3)"]
clouddirectory = ["mypy-boto3-clouddirectory (>=1.18.3)"]
cloudformation = ["mypy-boto3-cloudformation (>=1.18.3)"]
cloudfront = ["mypy-boto3-cloudfront (>=1.18.3)"]
cloudhsm = ["mypy-boto3-cloudhsm (>=1.18.3)"]
cloudhsmv2 = ["mypy-boto3-cloudhsmv2 (>=1.18.3)"]
cloudsearch = ["mypy-boto3-cloudsearch (>=1.18.3)"]
cloudsearchdomain = ["mypy-boto3-cloudsearchdomain (>=1.18.3)"]
cloudtrail = ["mypy-boto3-cloudtrail (>=1.18.3)"]
cloudwatch = ["mypy-boto3-cloudwatch (>=1.18.3)"]
codeartifact = ["mypy-boto3-codeartifact (>=1.18.3)"]
codebuild = ["mypy-boto3-codebuild (>=1.18.3)"]
codecommit = ["mypy-boto3-codecommit (>=1.18.3)"]
codedeploy = ["mypy-boto3-codedeploy (>=1.18.3)"]
codeguru-reviewer = ["mypy-boto3-codeguru-reviewer (>=1.18.3)"]
codeguruprofiler = ["mypy-boto3-codeguruprofiler (>=1.18.3)"]
codepipeline = ["mypy-boto3-codepipeline (>=1.18.3)"]
codestar = ["mypy-boto3-codestar (>=1.18.3)"]
codestar-connections = ["mypy-boto3-codestar-connections (>=1.18.3)"]
codestar-notifications = ["mypy-boto3-codestar-notifications (>=1.18.3)"]
cognito-identity = ["mypy-boto3-cognito-identity (>=1.18.3)"]
cognito-idp = ["mypy-boto3-cognito-idp (>=1.18.3)"]
cognito-sync = ["mypy-boto3-cognito-sync (>=1.18.3)"]
comprehend = ["mypy-boto3-comprehend (>=1.18.3)"]
comprehendmedical = ["mypy-boto3-comprehendmedical (>=1.18.3)"]
compute-optimizer = ["mypy-boto3-compute-optimizer (>=1.18.3)"]
config = ["mypy-boto3-config (>=1.18.3)"]
connect = ["mypy-boto3-connect (>=1.18.3)"]
connect-contact-lens = ["mypy-boto3-connect-contact-lens (>=1.18.3)"]
connectparticipant = ["mypy-boto3-connectparticipant (>=1.18.3)"]
cur = ["mypy-boto3-cur (>=1.18.3)"]
customer-profiles = ["mypy-boto3-customer-profiles (>=1.18.3)"]
databrew = ["mypy-boto3-databrew (>=1.18.3)"]
dataexchange = ["mypy-boto3-dataexchange (>=1.18.3)"]
datapipeline = ["mypy-boto3-datapipeline (>=1.18.3)"]
datasync = ["mypy-boto3-datasync (>=1.18.3)"]
dax = ["mypy-boto3-dax (>=1.18.3)"]
detective = ["mypy-boto3-detective (>=1.18.3)"]
devicefarm = ["mypy-boto3-devicefarm (>=1.18.3)"]
devops-guru = ["mypy-boto3-devops-guru (>=1.18.3)"]
directconnect = ["mypy-boto3-directconnect (>=1.18.3)"]
discovery = ["mypy-boto3-discovery (>=1.18.3)"]
dlm = ["mypy-boto3-dlm (>=1.18.3)"]
dms = ["mypy-boto3-dms (>=1.18.3)"]
docdb = ["mypy-boto3-docdb (>=1.18.3)"]
ds = ["mypy-boto3-ds (>=1.18.3)"]
dynamodb = ["mypy-boto3-dynamodb (>=1.18.3)"]
dynamodbstreams = ["mypy-boto3-dynamodbstreams (>=1.18.3)"]
ebs = ["mypy-boto3-ebs (>=1.18.3)"]
ec2 = ["mypy-boto3-ec2 (>=1.18.3)"]
ec2-instance-connect = ["mypy-boto3-ec2-instance-connect (>=1.18.3)"]
ecr = ["mypy-boto3-ecr (>=1.18.3)"]
ecr-public = ["mypy-boto3-ecr-public (>=1.18.3)"]
ecs = ["mypy-boto3-ecs (>=1.18.3)"]
efs = ["mypy-boto3-efs (>=1.18.3)"]
eks = ["mypy-boto3-eks (>=1.18.3)"]
elastic-inference = ["mypy-boto3-elastic-inference (>=1.18.3)"]
elasticache = ["mypy-boto3-elasticache (>=1.18.3)"]
elasticbeanstalk = ["mypy-boto3-elasticbeanstalk (>=1.18.3)"]
elastictranscoder = ["mypy-boto3-elastictranscoder (>=1.18.3)"]
elb = ["mypy-boto3-elb (>=1.18.3)"]
elbv2 = ["mypy-boto3-elbv2 (>=1.18.3)"]
emr = ["mypy-boto3-emr (>=1.18.3)"]
emr-containers = ["mypy-boto3-emr-containers (>=1.18.3)"]
es = ["mypy-boto3-es (>=1.18.3)"]
essential = ["mypy-boto3-cloudformation (>=1.18.3)", "mypy-boto3-dynamodb (>=1.18.3)", "mypy-boto3-ec2 (>=1.18.3)", "mypy-boto3-lambda (>=1.18.3)", "mypy-boto3-rds (>=1.18.3)", "mypy-boto3-s3 (>=1.18.3)", "mypy-boto3-sqs (>=1.18.3)"]
events = ["mypy-boto3-events (>=1.18.3)"]
finspace = ["mypy-boto3-finspace (>=1.18.3)"]
finspace-data = ["mypy-boto3-finspace-data (>=1.18.3)"]
firehose = ["mypy-boto3-firehose (>=1.18.3)"]
fis = ["mypy-boto3-fis (>=1.18.3)"]
fms = ["mypy-boto3-fms (>=1.18.3)"]
forecast = ["mypy-boto3-forecast (>=1.18.3)"]
forecastquery = ["mypy-boto3-forecastquery (>=1.18.3)"]
frauddetector = ["mypy-boto3-frauddetector (>=1.18.3)"]
fsx = ["mypy-boto3-fsx (>=1.18.3)"]
gamelift = ["mypy-boto3-gamelift (>=1.18.3)"]
glacier = ["mypy-boto3-glacier (>=1.18.3)"]
globalaccelerator = ["mypy-boto3-globalaccelerator (>=1.18.3)"]
glue = ["mypy-boto3-glue (>=1.18.3)"]
greengrass = ["mypy-boto3-greengrass (>=1.18.3)"]
greengrassv2 = ["mypy-boto3-greengrassv2 (>=1.18.3)"]
groundstation = ["mypy-boto3-groundstation (>=1.18.3)"]
guardduty = ["mypy-boto3-guardduty (>=1.18.3)"]
health = ["mypy-boto3-health (>=1.18.3)"]
healthlake = ["mypy-boto3-healthlake (>=1.18.3)"]
honeycode = ["mypy-boto3-honeycode (>=1.18.3)"]
iam = ["mypy-boto3-iam (>=1.18.3)"]
identitystore = ["mypy-boto3-identitystore (>=1.18.3)"]
imagebuilder = ["mypy-boto3-imagebuilder (>=1.18.3)"]
importexport = ["mypy-boto3-importexport (>=1.18.3)"]
inspector = ["mypy-boto3-inspector (>=1.18.3)"]
iot = ["mypy-boto3-iot (>=1.18.3)"]
iot-data = ["mypy-boto3-iot-data (>=1.18.3)"]
iot-jobs-data = ["mypy-boto3-iot-jobs-data (>=1.18.3)"]
iot1click-devices = ["mypy-boto3-iot1click-devices (>=1.18.3)"]
iot1click-projects = ["mypy-boto3-iot1click-projects (>=1.18.3)"]
iotanalytics = ["mypy-boto3-iotanalytics (>=1.18.3)"]
iotdeviceadvisor = ["mypy-boto3-iotdeviceadvisor (>=1.18.3)"]
iotevents = ["mypy-boto3-iotevents (>=1.18.3)"]
iotevents-data = ["mypy-boto3-iotevents-data (>=1.18.3)"]
iotfleethub = ["mypy-boto3-iotfleethub (>=1.18.3)"]
iotsecuretunneling = ["mypy-boto3-iotsecuretunneling (>=1.18.3)"]
iotsitewise = ["mypy-boto3-iotsitewise (>=1.18.3)"]
iotthingsgraph = ["mypy-boto3-iotthingsgraph (>=1.18.3)"]
iotwireless = ["mypy-boto3-iotwireless (>=1.18.3)"]
ivs = ["mypy-boto3-ivs (>=1.18.3)"]
kafka = ["mypy-boto3-kafka (>=1.18.3)"]
kendra = ["mypy-boto3-kendra (>=1.18.3)"]
kinesis = ["mypy-boto3-kinesis (>=1.18.3)"]
kinesis-video-archived-media = ["mypy-boto3-kinesis-video-archived-media (>=1.18.3)"]
kinesis-video-media = ["mypy-boto3-kinesis-video-media (>=1.18.3)"]
kinesis-video-signaling = ["mypy-boto3-kinesis-video-signaling (>=1.18.3)"]
kinesisanalytics = ["mypy-boto3-kinesisanalytics (>=1.18.3)"]
kinesisanalyticsv2 = ["mypy-boto3-kinesisanalyticsv2 (>=1.18.3)"]
kinesisvideo = ["mypy-boto3-kinesisvideo (>=1.18.3)"]
kms = ["mypy-boto3-kms (>=1.18.3)"]
lakeformation = ["mypy-boto3-lakeformation (>=1.18.3)"]
lambda = ["mypy-boto3-lambda (>=1.18.3)"]
lex-models = ["mypy-boto3-lex-models (>=1.18.3)"]
lex-runtime = ["mypy-boto3-lex-runtime (>=1.18.3)"]
lexv2-models = ["mypy-boto3-lexv2-models (>=1.18.3)"]
lexv2-runtime = ["mypy-boto3-lexv2-runtime (>=1.18.3)"]
license-manager = ["mypy-boto3-license-manager (>=1.18.3)"]
lightsail = ["mypy-boto3-lightsail (>=1.18.3)"]
location = ["mypy-boto3-location (>=1.18.3)"]
logs = ["mypy-boto3-logs (>=1.18.3)"]
lookoutequipment = ["mypy-boto3-lookoutequipment (>=1.18.3)"]
lookoutmetrics = ["mypy-boto3-lookoutmetrics (>=1.18.3)"]
lookoutvision = ["mypy-boto3-lookoutvision (>=1.18.3)"]
machinelearning = ["mypy-boto3-machinelearning (>=1.18.3)"]
macie = ["mypy-boto3-macie (>=1.18.3)"]
macie2 = ["mypy-boto3-macie2 (>=1.18.3)"]
managedblockchain = ["mypy-boto3-managedblockchain (>=1.18.3)"]
marketplace-catalog = ["mypy-boto3-marketplace-catalog (>=1.18.3)"]
marketplace-entitlement = ["mypy-boto3-marketplace-entitlement (>=1.18.3)"]
marketplacecommerceanalytics = ["mypy-boto3-marketplacecommerceanalytics (>=1.18.3)"]
mediaconnect = ["mypy-boto3-mediaconnect (>=1.18.3)"]
mediaconvert = ["mypy-boto3-mediaconvert (>=1.18.3)"]
medialive = ["mypy-boto3-medialive (>=1.18.3)"]
mediapackage = ["mypy-boto3-mediapackage (>=1.18.3)"]
mediapackage-vod = ["mypy-boto3-mediapackage-vod (>=1.18.3)"]
mediastore = ["mypy-boto3-mediastore (>=1.18.3)"]
mediastore-data = ["mypy-boto3-mediastore-data (>=1.18.3)"]
mediatailor = ["mypy-boto3-mediatailor (>=1.18.3)"]
meteringmarketplace = ["mypy-boto3-meteringmarketplace (>=1.18.3)"]
mgh = ["mypy-boto3-mgh (>=1.18.3)"]
mgn = ["mypy-boto3-mgn (>=1.18.3)"]
migrationhub-config = ["mypy-boto3-migrationhub-config (>=1.18.3)"]
mobile = ["mypy-boto3-mobile (>=1.18.3)"]
mq = ["mypy-boto3-mq (>=1.18.3)"]
mturk = ["mypy-boto3-mturk (>=1.18.3)"]
mwaa = ["mypy-boto3-mwaa (>=1.18.3)"]
neptune = ["mypy-boto3-neptune (>=1.18.3)"]
network-firewall = ["mypy-boto3-network-firewall (>=1.18.3)"]
networkmanager = ["mypy-boto3-networkmanager (>=1.18.3)"]
nimble = ["mypy-boto3-nimble (>=1.18.3)"]
opsworks = ["mypy-boto3-opsworks (>=1.18.3)"]
opsworkscm = ["mypy-boto3-opsworkscm (>=1.18.3)"]
organizations = ["mypy-boto3-organizations (>=1.18.3)"]
outposts = ["mypy-boto3-outposts (>=1.18.3)"]
personalize = ["mypy-boto3-personalize (>=1.18.3)"]
personalize-events = ["mypy-boto3-personalize-events (>=1.18.3)"]
personalize-runtime = ["mypy-boto3-personalize-runtime (>=1.18.3)"]
pi = ["mypy-boto3-pi (>=1.18.3)"]
pinpoint = ["mypy-boto3-pinpoint (>=1.18.3)"]
pinpoint-email = ["mypy-boto3-pinpoint-email (>=1.18.3)"]
pinpoint-sms-voice = ["mypy-boto3-pinpoint-sms-voice (>=1.18.3)"]
polly = ["mypy-boto3-polly (>=1.18.3)"]
pricing = ["mypy-boto3-pricing (>=1.18.3)"]
proton = ["mypy-boto3-proton (>=1.18.3)"]
qldb = ["mypy-boto3-qldb (>=1.18.3)"]
qldb-session = ["mypy-boto3-qldb-session (>=1.18.3)"]
quicksight = ["mypy-boto3-quicksight (>=1.18.3)"]
ram = ["mypy-boto3-ram (>=1.18.3)"]
rds = ["mypy-boto3-rds (>=1.18.3)"]
rds-data = ["mypy-boto3-rds-data (>=1.18.3)"]
redshift = ["mypy-boto3-redshift (>=1.18.3)"]
redshift-data = ["mypy-boto3-redshift-data (>=1.18.3)"]
rekognition = ["mypy-boto3-rekognition (>=1.18.3)"]
resource-groups = ["mypy-boto3-resource-groups (>=1.18.3)"]
resourcegroupstaggingapi = ["mypy-boto3-resourcegroupstaggingapi (>=1.18.3)"]
robomaker = ["mypy-boto3-robomaker (>=1.18.3)"]
route53 = ["mypy-boto3-route53 (>=1.18.3)"]
route53-recovery-cluster = ["mypy-boto3-route53-recovery-cluster (>=1.18.3)"]
route53-recovery-control-config = ["mypy-boto3-route53-recovery-control-config (>=1.18.3)"]
route53-recovery-readiness = ["mypy-boto3-route53-recovery-readiness (>=1.18.3)"]
route53domains = ["mypy-boto3-route53domains (>=1.18.3)"]
route53resolver = ["mypy-boto3-route53resolver (>=1.18.3)"]
s3 = ["mypy-boto3-s3 (>=1.18.3)"]
s3control = ["mypy-boto3-s3control (>=1.18.3)"]
s3outposts = ["mypy-boto3-s3outposts (>=1.18.3)"]
sagemaker = ["mypy-boto3-sagemaker (>=1.18.3)"]
sagemaker-a2i-runtime = ["mypy-boto3-sagemaker-a2i-runtime (>=1.18.3)"]
sagemaker-edge = ["mypy-boto3-sagemaker-edge (>=1.18.3)"]
sagemaker-featurestore-runtime = ["mypy-boto3-sagemaker-featurestore-runtime (>=1.18.3)"]
sagemaker-runtime = ["mypy-boto3-sagemaker-runtime (>=1.18.3)"]
savingsplans = ["mypy-boto3-savingsplans (>=1.18.3)"]
schemas = ["mypy-boto3-schemas (>=1.18.3)"]
sdb = ["mypy-boto3-sdb (>=1.18.3)"]
secretsmanager = ["mypy-boto3-secretsmanager (>=1.18.3)"]
securityhub = ["mypy-boto3-securityhub (>=1.18.3)"]
serverlessrepo = ["mypy-boto3-serverlessrepo (>=1.18.3)"]
service-quotas = ["mypy-boto3-service-quotas (>=1.18.3)"]
servicecatalog = ["mypy-boto3-servicecatalog (>=1.18.3)"]
servicecatalog-appregistry = ["mypy-boto3-servicecatalog-appregistry (>=1.18.3)"]
servicediscovery = ["mypy-boto3-servicediscovery (>=1.18.3)"]
ses = ["mypy-boto3-ses (>=1.18.3)"]
sesv2 = ["mypy-boto3-sesv2 (>=1.18.3)"]
shield = ["mypy-boto3-shield (>=1.18.3)"]
signer = ["mypy-boto3-signer (>=1.18.3)"]
sms = ["mypy-boto3-sms (>=1.18.3)"]
sms-voice = ["mypy-boto3-sms-voice (>=1.18.3)"]
snowball = ["mypy-boto3-snowball (>=1.18.3)"]
sns = ["mypy-boto3-sns (>=1.18.3)"]
sqs = ["mypy-boto3-sqs (>=1.18.3)"]
ssm = ["mypy-boto3-ssm (>=1.18.3)"]
ssm-contacts = ["mypy-boto3-ssm-contacts (>=1.18.3)"]
ssm-incidents = ["mypy-boto3-ssm-incidents (>=1.18.3)"]
sso = ["mypy-boto3-sso (>=1.18.3)"]
sso-admin = ["mypy-boto3-sso-admin (>=1.18.3)"]
sso-oidc = ["mypy-boto3-sso-oidc (>=1.18.3)"]
stepfunctions = ["mypy-boto3-stepfunctions (>=1.18.3)"]
storagegateway = ["mypy-boto3-storagegateway (>=1.18.3)"]
sts = ["mypy-boto3-sts (>=1.18.3)"]
support = ["mypy-boto3-support (>=1.18.3)"]
swf = ["mypy-boto3-swf (>=1.18.3)"]
synthetics = ["mypy-boto3-synthetics (>=1.18.3)"]
textract = ["mypy-boto3-textract (>=1.18.3)"]
timestream-query = ["mypy-boto3-timestream-query (>=1.18.3)"]
timestream-write = ["mypy-boto3-timestream-write (>=1.18.3)"]
transcribe = ["mypy-boto3-transcribe (>=1.18.3)"]
transfer = ["mypy-boto3-transfer (>=1.18.3)"]
translate = ["mypy-boto3-translate (>=1.18.3)"]
waf = ["mypy-boto3-waf (>=1.18.3)"]
waf-regional = ["mypy-boto3-waf-regional (>=1.18.3)"]
wafv2 = ["mypy-boto3-wafv2 (>=1.18.3)"]
wellarchitected = ["mypy-boto3-wellarchitected (>=1.18.3)"]
workdocs = ["mypy-boto3-workdocs (>=1.18.3)"]
worklink = ["mypy-boto3-worklink (>=1.18.3)"]
workmail = ["mypy-boto3-workmail (>=1.18.3)"]
workmailmessageflow = ["mypy-boto3-workmailmessageflow (>=1.18.3)"]
workspaces = ["mypy-boto3-workspaces (>=1.18.3)"]
xray = ["mypy-boto3-xray (>=1.18.3)"]

[[package]]
name = "botocore"
version = "1.21.8"
description = "Low-level, data-driven core of boto 3."
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
jmespath = ">=0.7.1,<1.0.0"
python-dateutil = ">=2.1,<3.0.0"
urllib3 = ">=1.25.4,<1.27"

[package.extras]
crt = ["awscrt (==0.11.24)"]

[[package]]
name = "botocore-stubs"
version = "1.21.8"
description = "Type annotations for botocore 1.21.8, generated by mypy-boto3-builder 5.1.0"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = "*", markers = "python_version < \"3.8\""}

[[package]]
name = "cached-property"
version = "1.5.2"
description = "A decorator for caching properties in classes."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "certifi"
version = "2021.5.30"
description = "Python package for providing Mozilla's CA Bundle."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "cffi"
version = "1.14.6"
description = "Foreign Function Interface for Python calling C code."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
pycparser = "*"

[[package]]
name = "cfgv"
version = "3.3.0"
description = "Validate configuration and produce human readable error messages."
category = "dev"
optional = false
python-versions = ">=3.6.1"

[[package]]
name = "charset-normalizer"
version = "2.0.3"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "dev"
optional = false
python-versions = ">=3.5.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "click"
version = "8.0.1"
description = "Composable command line interface toolkit"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}

[[package]]
name = "colorama"
version = "0.4.4"
description = "Cross-platform colored terminal text."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "coverage"
version = "5.5"
description = "Code coverage measurement for Python"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"

[package.dependencies]
toml = {version = "*", optional = true, markers = "extra == \"toml\""}

[package.extras]
toml = ["toml"]

[[package]]
name = "cryptography"
version = "3.4.7"
description = "cryptography is a package which provides cryptographic recipes and primitives to Python developers."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.12"

[package.extras]
docs = ["sphinx (>=1.6.5,!=1.8.0,!=3.1.0,!=3.1.1)", "sphinx-rtd-theme"]
docstest = ["doc8", "pyenchant (>=1.6.11)", "twine (>=1.12.0)", "sphinxcontrib-spelling (>=4.0.1)"]
pep8test = ["black", "flake8", "flake8-import-order", "pep8-naming"]
sdist = ["setuptools-rust (>=0.11.4)"]
ssh = ["bcrypt (>=3.1.5)"]
test = ["pytest (>=6.0)", "pytest-cov", "pytest-subtests", "pytest-xdist", "pretend", "iso8601", "pytz", "hypothesis (>=1.11.4,!=3.79.2)"]

[[package]]
name = "darglint"
version = "1.8.0"
description = "A utility for ensuring Google-style docstrings stay up to date with the source code."
category = "dev"
optional = false
python-versions = ">=3.6,<4.0"

[[package]]
name = "data-science-types"
version = "0.2.23"
description = "Type stubs for Python machine learning libraries"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
dev = ["black", "flake8", "flake8-pyi", "matplotlib", "mypy (==0.770)", "numpy", "pandas", "pytest"]

[[package]]
name = "distlib"
version = "0.3.2"
description = "Distribution utilities"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "docutils"
version = "0.16"
description = "Docutils -- Python Documentation Utilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "dparse"
version = "0.5.1"
description = "A parser for Python dependency files"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
packaging = "*"
pyyaml = "*"
toml = "*"

[package.extras]
pipenv = ["pipenv"]

[[package]]
name = "filelock"
version = "3.0.12"
description = "A platform independent file lock."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "flake8"
version = "3.9.2"
description = "the modular source code checker: pep8 pyflakes and co"
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}
mccabe = ">=0.6.0,<0.7.0"
pycodestyle = ">=2.7.0,<2.8.0"
pyflakes = ">=2.3.0,<2.4.0"

[[package]]
name = "flake8-bandit"
version = "2.1.2"
description = "Automated security testing with bandit and flake8."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
bandit = "*"
flake8 = "*"
flake8-polyfill = "*"
pycodestyle = "*"

[[package]]
name = "flake8-bugbear"
version = "21.4.3"
description = "A plugin for flake8 finding likely bugs and design problems in your program. Contains warnings that don't belong in pyflakes and pycodestyle."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
attrs = ">=19.2.0"
flake8 = ">=3.0.0"

[package.extras]
dev = ["coverage", "black", "hypothesis", "hypothesmith"]

[[package]]
name = "flake8-docstrings"
version = "1.6.0"
description = "Extension for flake8 which uses pydocstyle to check docstrings"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
flake8 = ">=3"
pydocstyle = ">=2.1"

[[package]]
name = "flake8-polyfill"
version = "1.0.2"
description = "Polyfill package for Flake8 plugins"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
flake8 = "*"

[[package]]
name = "flake8-rst-docstrings"
version = "0.2.3"
description = "Python docstring reStructuredText (RST) validator"
category = "dev"
optional = false
python-versions = ">=3.3"

[package.dependencies]
flake8 = ">=3.0.0"
pygments = "*"
restructuredtext-lint = "*"

[[package]]
name = "gitdb"
version = "4.0.7"
description = "Git Object Database"
category = "dev"
optional = false
python-versions = ">=3.4"

[package.dependencies]
smmap = ">=3.0.1,<5"

[[package]]
name = "gitpython"
version = "3.1.20"
description = "Python Git Library"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
gitdb = ">=4.0.1,<5"
typing-extensions = {version = ">=3.7.4.3", markers = "python_version < \"3.10\""}

[[package]]
name = "hurry.filesize"
version = "0.9"
description = "A simple Python library for human readable file sizes (or anything sized in bytes)."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "identify"
version = "2.2.11"
description = "File identification library for Python"
category = "dev"
optional = false
python-versions = ">=3.6.1"

[package.extras]
license = ["editdistance-s"]

[[package]]
name = "idna"
version = "3.2"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "imagesize"
version = "1.2.0"
description = "Getting image size from png/jpeg/jpeg2000/gif file"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "importlib-metadata"
version = "4.6.1"
description = "Read metadata from Python packages"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = ">=3.6.4", markers = "python_version < \"3.8\""}
zipp = ">=0.5"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
perf = ["ipython"]
testing = ["pytest (>=4.6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "packaging", "pep517", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "pytest-black (>=0.3.7)", "pytest-mypy", "importlib-resources (>=1.3)"]

[[package]]
name = "iniconfig"
version = "1.1.1"
description = "iniconfig: brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "jinja2"
version = "3.0.1"
description = "A very fast and expressive template engine."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "jmespath"
version = "0.10.0"
description = "JSON Matching Expressions"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "joblib"
version = "1.0.1"
description = "Lightweight pipelining with Python functions"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "livereload"
version = "2.6.3"
description = "Python LiveReload is an awesome tool for web developers"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"
tornado = {version = "*", markers = "python_version > \"2.7\""}

[[package]]
name = "markupsafe"
version = "2.0.1"
description = "Safely add untrusted strings to HTML/XML markup."
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "mccabe"
version = "0.6.1"
description = "McCabe checker, plugin for flake8"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "more-itertools"
version = "8.8.0"
description = "More routines for operating on iterables, beyond itertools"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "moto"
version = "2.2.0"
description = "A library that allows your python tests to easily mock out the boto library"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
boto3 = ">=1.9.201"
botocore = ">=1.12.201"
cryptography = ">=3.3.1"
Jinja2 = ">=2.10.1"
MarkupSafe = "!=2.0.0a1"
more-itertools = "*"
python-dateutil = ">=2.1,<3.0.0"
pytz = "*"
requests = ">=2.5"
responses = ">=0.9.0"
werkzeug = "*"
xmltodict = "*"

[package.extras]
all = ["PyYAML (>=5.1)", "python-jose[cryptography] (>=3.1.0,<4.0.0)", "ecdsa (<0.15)", "docker (>=2.5.1)", "jsondiff (>=1.1.2)", "aws-xray-sdk (>=0.93,!=0.96)", "idna (>=2.5,<3)", "cfn-lint (>=0.4.0)", "sshpubkeys (>=3.1.0)"]
apigateway = ["python-jose[cryptography] (>=3.1.0,<4.0.0)", "ecdsa (<0.15)"]
awslambda = ["docker (>=2.5.1)"]
batch = ["docker (>=2.5.1)"]
cloudformation = ["docker (>=2.5.1)", "PyYAML (>=5.1)", "cfn-lint (>=0.4.0)"]
cognitoidp = ["python-jose[cryptography] (>=3.1.0,<4.0.0)", "ecdsa (<0.15)"]
dynamodb2 = ["docker (>=2.5.1)"]
dynamodbstreams = ["docker (>=2.5.1)"]
ec2 = ["docker (>=2.5.1)", "sshpubkeys (>=3.1.0)"]
iotdata = ["jsondiff (>=1.1.2)"]
s3 = ["PyYAML (>=5.1)"]
server = ["PyYAML (>=5.1)", "python-jose[cryptography] (>=3.1.0,<4.0.0)", "ecdsa (<0.15)", "docker (>=2.5.1)", "jsondiff (>=1.1.2)", "aws-xray-sdk (>=0.93,!=0.96)", "idna (>=2.5,<3)", "cfn-lint (>=0.4.0)", "sshpubkeys (>=3.1.0)", "flask", "flask-cors"]
ses = ["docker (>=2.5.1)"]
sns = ["docker (>=2.5.1)"]
sqs = ["docker (>=2.5.1)"]
ssm = ["docker (>=2.5.1)", "PyYAML (>=5.1)"]
xray = ["aws-xray-sdk (>=0.93,!=0.96)"]

[[package]]
name = "mypy"
version = "0.902"
description = "Optional static typing for Python"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
mypy-extensions = ">=0.4.3,<0.5.0"
toml = "*"
typed-ast = {version = ">=1.4.0,<1.5.0", markers = "python_version < \"3.8\""}
typing-extensions = ">=3.7.4"

[package.extras]
dmypy = ["psutil (>=4.0)"]
python2 = ["typed-ast (>=1.4.0,<1.5.0)"]

[[package]]
name = "mypy-boto3-s3"
version = "1.18.8"
description = "Type annotations for boto3.S3 1.18.8 service, generated by mypy-boto3-builder 5.1.0"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = "*", markers = "python_version < \"3.8\""}

[[package]]
name = "mypy-extensions"
version = "0.4.3"
description = "Experimental type system extensions for programs checked with the mypy typechecker."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "nodeenv"
version = "1.6.0"
description = "Node.js virtual environment builder"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "numpy"
version = "1.21.1"
description = "NumPy is the fundamental package for array computing with Python."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "packaging"
version = "21.0"
description = "Core utilities for Python packages"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2"

[[package]]
name = "pandas"
version = "1.3.1"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.7.1"

[package.dependencies]
numpy = ">=1.17.3"
python-dateutil = ">=2.7.3"
pytz = ">=2017.3"

[package.extras]
test = ["hypothesis (>=3.58)", "pytest (>=6.0)", "pytest-xdist"]

[[package]]
name = "pathspec"
version = "0.9.0"
description = "Utility library for gitignore style pattern matching of file paths."
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[[package]]
name = "pbr"
version = "5.6.0"
description = "Python Build Reasonableness"
category = "dev"
optional = false
python-versions = ">=2.6"

[[package]]
name = "pep8-naming"
version = "0.11.1"
description = "Check PEP-8 naming conventions, plugin for flake8"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
flake8-polyfill = ">=1.0.2,<2"

[[package]]
name = "platformdirs"
version = "2.1.0"
description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
docs = ["Sphinx (>=4)", "furo (>=2021.7.5b38)", "proselint (>=0.10.2)", "sphinx-autodoc-typehints (>=1.12)"]
test = ["appdirs (==1.4.4)", "pytest (>=6)", "pytest-cov (>=2.7)", "pytest-mock (>=3.6)"]

[[package]]
name = "pluggy"
version = "0.13.1"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}

[package.extras]
dev = ["pre-commit", "tox"]

[[package]]
name = "pre-commit"
version = "2.20.0"
description = "A framework for managing and maintaining multi-language pre-commit hooks."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cfgv = ">=2.0.0"
identify = ">=1.0.0"
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}
nodeenv = ">=0.11.1"
pyyaml = ">=5.1"
toml = "*"
virtualenv = ">=20.0.8"

[[package]]
name = "pre-commit-hooks"
version = "4.0.1"
description = "Some out-of-the-box hooks for pre-commit."
category = "dev"
optional = false
python-versions = ">=3.6.1"

[package.dependencies]
"ruamel.yaml" = ">=0.15"
toml = "*"

[[package]]
name = "py"
version = "1.10.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pyarrow"
version = "4.0.1"
description = "Python library for Apache Arrow"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numpy = ">=1.16.6"

[[package]]
name = "pycodestyle"
version = "2.7.0"
description = "Python style guide checker"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pycparser"
version = "2.20"
description = "C parser in Python"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pydocstyle"
version = "6.1.1"
description = "Python docstring style checker"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
snowballstemmer = "*"

[package.extras]
toml = ["toml"]

[[package]]
name = "pyflakes"
version = "2.3.1"
description = "passive checker of Python programs"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pygments"
version = "2.9.0"
description = "Pygments is a syntax highlighting package written in Python."
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "pyparsing"
version = "2.4.7"
description = "Python parsing module"
category = "dev"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "pytest"
version = "6.2.4"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
atomicwrites = {version = ">=1.0", markers = "sys_platform == \"win32\""}
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<1.0.0a1"
py = ">=1.8.2"
toml = "*"

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "requests", "xmlschema"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "pytz"
version = "2021.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "5.4.1"
description = "YAML parser and emitter for Python"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[[package]]
name = "regex"
version = "2021.7.6"
description = "Alternative regular expression module, to replace re."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "reorder-python-imports"
version = "2.6.0"
description = "Tool for reordering python imports"
category = "dev"
optional = false
python-versions = ">=3.6.1"

[package.dependencies]
"aspy.refactor-imports" = ">=2.1.0"

[[package]]
name = "requests"
version = "2.26.0"
description = "Python HTTP for Humans."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = {version = ">=2.0.0,<2.1.0", markers = "python_version >= \"3\""}
idna = {version = ">=2.5,<4", markers = "python_version >= \"3\""}
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)", "win-inet-pton"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<5)"]

[[package]]
name = "responses"
version = "0.13.3"
description = "A utility library for mocking out the `requests` Python library."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
requests = ">=2.0"
six = "*"
urllib3 = ">=1.25.10"

[package.extras]
tests = ["coverage (>=3.7.1,<6.0.0)", "pytest-cov", "pytest-localserver", "flake8", "pytest (>=4.6,<5.0)", "pytest (>=4.6)", "mypy"]

[[package]]
name = "restructuredtext-lint"
version = "1.3.2"
description = "reStructuredText linter"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
docutils = ">=0.11,<1.0"

[[package]]
name = "ruamel.yaml"
version = "0.17.10"
description = "ruamel.yaml is a YAML parser/emitter that supports roundtrip preservation of comments, seq/map flow style, and map key order"
category = "dev"
optional = false
python-versions = ">=3"

[package.dependencies]
"ruamel.yaml.clib" = {version = ">=0.1.2", markers = "platform_python_implementation == \"CPython\" and python_version < \"3.10\""}

[package.extras]
docs = ["ryd"]
jinja2 = ["ruamel.yaml.jinja2 (>=0.2)"]

[[package]]
name = "ruamel.yaml.clib"
version = "0.2.6"
description = "C version of reader, parser and emitter for ruamel.yaml derived from libyaml"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "s3transfer"
version = "0.5.0"
description = "An Amazon S3 Transfer Manager"
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
botocore = ">=1.12.36,<2.0a.0"

[package.extras]
crt = ["botocore[crt] (>=1.20.29,<2.0a.0)"]

[[package]]
name = "safety"
version = "1.10.3"
description = "Checks installed dependencies for known vulnerabilities."
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
Click = ">=6.0"
dparse = ">=0.5.1"
packaging = "*"
requests = "*"

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "smmap"
version = "4.0.0"
description = "A pure Python implementation of a sliding window memory map manager"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "snowballstemmer"
version = "2.1.0"
description = "This package provides 29 stemmers for 28 languages generated from Snowball algorithms."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "sphinx"
version = "4.1.2"
description = "Python documentation generator"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
alabaster = ">=0.7,<0.8"
babel = ">=1.3"
colorama = {version = ">=0.3.5", markers = "sys_platform == \"win32\""}
docutils = ">=0.14,<0.18"
imagesize = "*"
Jinja2 = ">=2.3"
packaging = "*"
Pygments = ">=2.0"
requests = ">=2.5.0"
snowballstemmer = ">=1.1"
sphinxcontrib-applehelp = "*"
sphinxcontrib-devhelp = "*"
sphinxcontrib-htmlhelp = ">=2.0.0"
sphinxcontrib-jsmath = "*"
sphinxcontrib-qthelp = "*"
sphinxcontrib-serializinghtml = ">=1.1.5"

[package.extras]
docs = ["sphinxcontrib-websupport"]
lint = ["flake8 (>=3.5.0)", "isort", "mypy (>=0.900)", "docutils-stubs", "types-typed-ast", "types-pkg-resources", "types-requests"]
test = ["pytest", "pytest-cov", "html5lib", "cython", "typed-ast"]

[[package]]
name = "sphinx-autobuild"
version = "2021.3.14"
description = "Rebuild Sphinx documentation on changes, with live-reload in the browser."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
colorama = "*"
livereload = "*"
sphinx = "*"

[package.extras]
test = ["pytest", "pytest-cov"]

[[package]]
name = "sphinx-click"
version = "3.0.1"
description = "Sphinx extension that automatically documents click applications"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
click = ">=7.0"
docutils = "*"
sphinx = ">=2.0"

[[package]]
name = "sphinx-rtd-theme"
version = "0.5.2"
description = "Read the Docs theme for Sphinx"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
docutils = "<0.17"
sphinx = "*"

[package.extras]
dev = ["transifex-client", "sphinxcontrib-httpdomain", "bump2version"]

[[package]]
name = "sphinxcontrib-applehelp"
version = "1.0.2"
description = "sphinxcontrib-applehelp is a sphinx extension which outputs Apple help books"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest"]

[[package]]
name = "sphinxcontrib-devhelp"
version = "1.0.2"
description = "sphinxcontrib-devhelp is a sphinx extension which outputs Devhelp document."
category = "dev"
optional = false
python-versions = ">=3.5"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest"]

[[package]]
name = "sphinxcontrib-htmlhelp"
version = "2.0.0"
description = "sphinxcontrib-htmlhelp is a sphinx extension which renders HTML help files"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest", "html5lib"]

[[package]]
name = "sphinxcontrib-jsmath"
version = "1.0.1"
description = "A sphinx extension which renders display math in HTML via JavaScript"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.extras]
test = ["pytest", "flake8", "mypy"]

[[package]]
name = "sphinxcontrib-qthelp"
version = "1.0.3"
description = "sphinxcontrib-qthelp is a sphinx extension which outputs QtHelp document."
category = "dev"
optional = false
python-versions = ">=3.5"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest"]

[[package]]
name = "sphinxcontrib-serializinghtml"
version = "1.1.5"
description = "sphinxcontrib-serializinghtml is a sphinx extension which outputs \"serialized\" HTML files (json and pickle)."
category = "dev"
optional = false
python-versions = ">=3.5"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest"]

[[package]]
name = "stevedore"
version = "3.3.0"
description = "Manage dynamic plugins for Python applications"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
importlib-metadata = {version = ">=1.7.0", markers = "python_version < \"3.8\""}
pbr = ">=2.0.0,<2.1.0 || >2.1.0"

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "dev"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tornado"
version = "6.1"
description = "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed."
category = "dev"
optional = false
python-versions = ">= 3.5"

[[package]]
name = "typed-ast"
version = "1.4.3"
description = "a fork of Python 2 and 3 ast modules with type comment support"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "typeguard"
version = "2.12.1"
description = "Run-time type checker for Python"
category = "dev"
optional = false
python-versions = ">=3.5.3"

[package.extras]
doc = ["sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]
test = ["pytest", "typing-extensions", "mypy"]

[[package]]
name = "typing-extensions"
version = "3.10.0.0"
description = "Backported and Experimental Type Hints for Python 3.5+"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "urllib3"
version = "1.26.6"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"

[package.extras]
brotli = ["brotlipy (>=0.6.0)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "virtualenv"
version = "20.6.0"
description = "Virtual Python Environment builder"
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
"backports.entry-points-selectable" = ">=1.0.4"
distlib = ">=0.3.1,<1"
filelock = ">=3.0.0,<4"
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}
platformdirs = ">=2,<3"
six = ">=1.9.0,<2"

[package.extras]
docs = ["proselint (>=0.10.2)", "sphinx (>=3)", "sphinx-argparse (>=0.2.5)", "sphinx-rtd-theme (>=0.4.3)", "towncrier (>=19.9.0rc1)"]
testing = ["coverage (>=4)", "coverage-enable-subprocess (>=1)", "flaky (>=3)", "pytest (>=4)", "pytest-env (>=0.6.2)", "pytest-freezegun (>=0.4.1)", "pytest-mock (>=2)", "pytest-randomly (>=1)", "pytest-timeout (>=1)", "packaging (>=20.0)", "xonsh (>=0.9.16)"]

[[package]]
name = "werkzeug"
version = "2.0.1"
description = "The comprehensive WSGI web application library."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
watchdog = ["watchdog"]

[[package]]
name = "xdoctest"
version = "0.15.5"
description = "A rewrite of the builtin doctest module"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
colorama = {version = "*", optional = true, markers = "platform_system == \"Windows\" and extra == \"colors\""}
Pygments = {version = "*", optional = true, markers = "extra == \"colors\""}
six = "*"

[package.extras]
all = ["six", "codecov", "scikit-build", "cmake", "ninja", "pybind11", "pygments", "colorama", "pytest", "pytest", "pytest-cov", "pytest", "pytest", "pytest-cov", "typing", "nbformat", "nbconvert", "jupyter-client", "ipython", "ipykernel", "pytest", "pytest-cov"]
colors = ["pygments", "colorama"]
jupyter = ["nbformat", "nbconvert", "jupyter-client", "ipython", "ipykernel"]
optional = ["pygments", "colorama", "nbformat", "nbconvert", "jupyter-client", "ipython", "ipykernel"]
tests = ["codecov", "scikit-build", "cmake", "ninja", "pybind11", "pytest", "pytest", "pytest-cov", "pytest", "pytest", "pytest-cov", "typing", "nbformat", "nbconvert", "jupyter-client", "ipython", "ipykernel", "pytest", "pytest-cov"]

[[package]]
name = "xmltodict"
version = "0.12.0"
description = "Makes working with XML feel like you are working with JSON"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "zipp"
version = "3.5.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=4.6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "jaraco.itertools", "func-timeout", "pytest-black (>=0.3.7)", "pytest-mypy"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.7.1,<4.0.0"
content-hash = "0c846fbbdbb63a11347e891ce0cc829197661220231fca727af5c943eb129574"

[metadata.files]
alabaster = []
appdirs = []
"aspy.refactor-imports" = []
atomicwrites = []
attrs = []
babel = []
"backports.entry-points-selectable" = []
bandit = []
black = []
boto3 = []
boto3-stubs = []
botocore = []
botocore-stubs = []
cached-property = []
certifi = []
cffi = []
cfgv = []
charset-normalizer = []
click = []
colorama = []
coverage = []
cryptography = []
darglint = []
data-science-types = []
distlib = []
docutils = []
dparse = []
filelock = []
flake8 = []
flake8-bandit = []
flake8-bugbear = []
flake8-docstrings = []
flake8-polyfill = []
flake8-rst-docstrings = []
gitdb = []
gitpython = []
"hurry.filesize" = []
identify = []
idna = []
imagesize = []
importlib-metadata = []
iniconfig = []
jinja2 = []
jmespath = []
joblib = []
livereload = []
markupsafe = []
mccabe = []
more-itertools = []
moto = []
mypy = []
mypy-boto3-s3 = []
mypy-extensions = []
nodeenv = []
numpy = []
packaging = []
pandas = []
pathspec = []
pbr = []
pep8-naming = []
platformdirs = []
pluggy = []
pre-commit = []
pre-commit-hooks = []
py = []
pyarrow = []
pycodestyle = []
pycparser = []
pydocstyle = []
pyflakes = []
pygments = []
pyparsing = []
pytest = []
python-dateutil = []
pytz = []
pyyaml = []
regex = []
reorder-python-imports = []
requests = []
responses = []
restructuredtext-lint = []
"ruamel.yaml" = []
"ruamel.yaml.clib" = []
s3transfer = []
safety = []
six = []
smmap = []
snowballstemmer = []
sphinx = []
sphinx-autobuild = []
sphinx-click = []
sphinx-rtd-theme = []
sphinxcontrib-applehelp = []
sphinxcontrib-devhelp = []
sphinxcontrib-htmlhelp = []
sphinxcontrib-jsmath = []
sphinxcontrib-qthelp = []
sphinxcontrib-serializinghtml = []
stevedore = []
toml = []
tornado = []
typed-ast = []
typeguard = []
typing-extensions = []
urllib3 = []
virtualenv = []
werkzeug = []
xdoctest = []
xmltodict = []
zipp = []
